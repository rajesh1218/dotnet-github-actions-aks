# deploy to aks

name: Build deploy to AKS
on:
 workflow_dispatch:
jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
    - name: git checkout
      uses: actions/checkout@v5.0.0
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'      
    - name: Restore dependencies
      run: dotnet restore githubactions-aks-demo.sln
    - name: Build solution
      run: dotnet build githubactions-aks-demo.sln --configuration release --no-restore
  Docker_build:
    needs: Build
    runs-on: ubuntu-latest
    steps:
    - name: git checkout
      uses: actions/checkout@v5.0.0
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    # üîê Login to Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Azure Login
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
            
    # üîê Login to Azure Container Registry
    - name: Azure ACR Login
      uses: docker/login-action@v3
      with:
        registry: ${{ secrets.ACR_URL }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    - name: Build and push image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: | 
         rajeshjallu/github-actions-aks:latest
         devpprojectrajesh.azurecr.io/github-actions-aks:latest
  AKS_Deploy:
     needs: Docker_build
     runs-on: ubuntu-latest
     steps:
     - name: git checkout
       uses: actions/checkout@v5.0.0
     - name: AKS set context
       uses: Azure/k8s-set-context@v3.0
       with:
         kubeconfig: '${{ secrets.KUBECONFIG }}'
        # Resource Group Name
         resource-group: app-grp
         # AKS Cluster Name
         cluster-name: rja-cluster

     - name: Create secret in Kubernetes cluster
       run: |
        kubectl create secret docker-registry docker-image-pull-secret \
          --docker-username="${{ secrets.DOCKER_USERNAME }}" \
          --docker-password="${{ secrets.DOCKER_PASSWORD }}" \
          --docker-server=https://index.docker.io/v1/ \
          --docker-email=jallu225@gmail.com"
          
     - name: Deploy to Kubernetes cluster
       uses: Azure/k8s-deploy@v1
       with:        
         # Path to the manifest files which will be used for deployment.
         manifests: |
           k8s/deployment.yml
           k8s/service.yml
         # Fully qualified resource URL of the image(s) to be used for substitutions on the manifest files Example: contosodemo.azurecr.io/helloworld:test
         images: '${{ secrets.DOCKER_USERNAME }}/githubactions-aks-demo:latest'
         # Name of a docker-registry secret that has already been set up within the cluster. Each of these secret names are added under imagePullSecrets field for the workloads found in the input manifest files
         imagepullsecrets: docker-image-pull-secret
         # deploy/promote/reject
         action: deploy
     
     
